<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary x:Class="Ntreev.Crema.Client.Framework.Assets.DomainDataGridControl"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
                    xmlns:nmgc="clr-namespace:Ntreev.ModernUI.Framework.DataGrid.Controls;assembly=Ntreev.ModernUI.Framework.DataGrid"
                    xmlns:ncfc="clr-namespace:Ntreev.Crema.Client.Framework.Controls">

    <ControlTemplate x:Key="DomainDataCell_Template" TargetType="{x:Type ncfc:DomainDataCell}">
        <Grid>
            <Border x:Name="ContentBorder" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <xcdg:CellContentPresenter x:Name="PART_CellContentPresenter"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <Border x:Name="InnerBorder" BorderThickness="1" Visibility="Hidden" />
            <Border x:Name="UserBorder" BorderThickness="1" />

            <Popup Name="usersPopup" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right" AllowsTransparency="True" PopupAnimation="Slide">
                <Border BorderThickness="1" BorderBrush="{DynamicResource WindowBorderActive}" Margin="0,0,8,8"
                        Background="{DynamicResource WindowBackground}" SnapsToDevicePixels="True">
                    <ItemsControl ItemsSource="{Binding Users, RelativeSource={RelativeSource TemplatedParent}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Padding="4 2">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding Background}" Width="14" Height="14" />
                                        <Border Width="2" />
                                        <TextBlock Text="{Binding UserID}" Foreground="{DynamicResource WindowText}"   />
                                        <Border Width="2" />
                                        <TextBlock Text="{Binding UserName, StringFormat='{}({0})'}" Foreground="{DynamicResource WindowText}"   />
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Border.Effect>
                        <DropShadowEffect Opacity="0.5" />
                    </Border.Effect>
                </Border>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCurrent" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                    <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                </MultiTrigger.Setters>
            </MultiTrigger>

            <DataTrigger Binding="{Binding Path=ParentRow.IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundHover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundSelected}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsCurrent" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundCurrent}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundCurrent}" />
                <Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsBeingEdited" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
                <!--<Setter TargetName="InnerBorder" Property="Visibility" Value="Hidden" />-->
            </Trigger>

            <Trigger Property="HasUser" Value="True">
                <Setter TargetName="UserBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="UserBorder" Property="BorderBrush" Value="{Binding UserBrush, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="HasUser" Value="False">
                <Setter TargetName="UserBorder" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsUserEditing" Value="True">
                <Setter TargetName="ContentBorder" Property="Background" Value="{Binding UserBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="ReadOnly" Value="True" />
            </Trigger>
            <Trigger Property="IsUserEditing" Value="False">
                <Setter TargetName="ContentBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="HasUser" Value="True" />
                    <Condition Property="IsClientAlone" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="usersPopup" Property="IsOpen" Value="True" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ContentBorder}" Value="False">
                <Setter TargetName="usersPopup" Property="IsOpen" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type xcdg:TableViewItemsHost}">
        <!--<EventSetter Event="Loaded" Handler="TableViewItemsHost_Loaded" />-->
    </Style>

    <Style TargetType="{x:Type ncfc:DomainInsertionCell}" BasedOn="{StaticResource {x:Type xcdg:Cell}}" />

    <Style x:Key="DomainInsertionRowSelector_Style" TargetType="{x:Type xcdg:RowSelector}" BasedOn="{StaticResource InsertionRowSelector_Style}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ncfc:DomainInsertionRow}" BasedOn="{StaticResource {x:Type xcdg:InsertionRow}}">
        <Setter Property="xcdg:RowSelector.RowSelectorStyle" Value="{StaticResource DomainInsertionRowSelector_Style}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).DataGridControl.ReadOnly}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).(nmgc:ModernDataGridControl.IsCurrentContext)}" Value="False">
                <Setter Property="Background" Value="{DynamicResource DataGridCellBackgroundInactivated}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ncfc:DomainDataRow}" BasedOn="{StaticResource {x:Type nmgc:ModernDataRow}}" />

    <Style TargetType="{x:Type ncfc:DomainDataCell}" BasedOn="{StaticResource {x:Type nmgc:ModernDataCell}}">
        <Setter Property="BorderThickness" Value="0 0 1 1" />
        <Setter Property="Template" Value="{StaticResource DomainDataCell_Template}" />
    </Style>

    <Style TargetType="{x:Type ncfc:DomainDataGridControl}" BasedOn="{StaticResource {x:Type nmgc:ModernDataGridControl}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

</ResourceDictionary>